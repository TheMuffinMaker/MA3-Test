// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: chitchat.proto

package ma3test

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Broadcast_Type int32

const (
	Broadcast_CHAT  Broadcast_Type = 0
	Broadcast_JOIN  Broadcast_Type = 1
	Broadcast_LEAVE Broadcast_Type = 2
)

// Enum value maps for Broadcast_Type.
var (
	Broadcast_Type_name = map[int32]string{
		0: "CHAT",
		1: "JOIN",
		2: "LEAVE",
	}
	Broadcast_Type_value = map[string]int32{
		"CHAT":  0,
		"JOIN":  1,
		"LEAVE": 2,
	}
)

func (x Broadcast_Type) Enum() *Broadcast_Type {
	p := new(Broadcast_Type)
	*p = x
	return p
}

func (x Broadcast_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Broadcast_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_chitchat_proto_enumTypes[0].Descriptor()
}

func (Broadcast_Type) Type() protoreflect.EnumType {
	return &file_chitchat_proto_enumTypes[0]
}

func (x Broadcast_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Broadcast_Type.Descriptor instead.
func (Broadcast_Type) EnumDescriptor() ([]byte, []int) {
	return file_chitchat_proto_rawDescGZIP(), []int{5, 0}
}

type SubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_chitchat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chitchat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_chitchat_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type PublishRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishRequest) Reset() {
	*x = PublishRequest{}
	mi := &file_chitchat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishRequest) ProtoMessage() {}

func (x *PublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chitchat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishRequest.ProtoReflect.Descriptor instead.
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return file_chitchat_proto_rawDescGZIP(), []int{1}
}

func (x *PublishRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *PublishRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type PublishResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"` // optional error message
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishResponse) Reset() {
	*x = PublishResponse{}
	mi := &file_chitchat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResponse) ProtoMessage() {}

func (x *PublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chitchat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResponse.ProtoReflect.Descriptor instead.
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return file_chitchat_proto_rawDescGZIP(), []int{2}
}

func (x *PublishResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *PublishResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type LeaveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveRequest) Reset() {
	*x = LeaveRequest{}
	mi := &file_chitchat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRequest) ProtoMessage() {}

func (x *LeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chitchat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRequest.ProtoReflect.Descriptor instead.
func (*LeaveRequest) Descriptor() ([]byte, []int) {
	return file_chitchat_proto_rawDescGZIP(), []int{3}
}

func (x *LeaveRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type LeaveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveResponse) Reset() {
	*x = LeaveResponse{}
	mi := &file_chitchat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveResponse) ProtoMessage() {}

func (x *LeaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chitchat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveResponse.ProtoReflect.Descriptor instead.
func (*LeaveResponse) Descriptor() ([]byte, []int) {
	return file_chitchat_proto_rawDescGZIP(), []int{4}
}

func (x *LeaveResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *LeaveResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Broadcast message sent from server to all clients
type Broadcast struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          Broadcast_Type         `protobuf:"varint,1,opt,name=type,proto3,enum=chitchat.Broadcast_Type" json:"type,omitempty"`
	ClientId      string                 `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`           // author or participant for join/leave
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                             // actual text (for CHAT) or "Participant X joined..." for JOIN/LEAVE
	LogicalTime   int64                  `protobuf:"varint,4,opt,name=logical_time,json=logicalTime,proto3" json:"logical_time,omitempty"` // Lamport logical time
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Broadcast) Reset() {
	*x = Broadcast{}
	mi := &file_chitchat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Broadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Broadcast) ProtoMessage() {}

func (x *Broadcast) ProtoReflect() protoreflect.Message {
	mi := &file_chitchat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Broadcast.ProtoReflect.Descriptor instead.
func (*Broadcast) Descriptor() ([]byte, []int) {
	return file_chitchat_proto_rawDescGZIP(), []int{5}
}

func (x *Broadcast) GetType() Broadcast_Type {
	if x != nil {
		return x.Type
	}
	return Broadcast_CHAT
}

func (x *Broadcast) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Broadcast) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Broadcast) GetLogicalTime() int64 {
	if x != nil {
		return x.LogicalTime
	}
	return 0
}

var File_chitchat_proto protoreflect.FileDescriptor

const file_chitchat_proto_rawDesc = "" +
	"\n" +
	"\x0echitchat.proto\x12\bchitchat\"/\n" +
	"\x10SubscribeRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\"G\n" +
	"\x0ePublishRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\"7\n" +
	"\x0fPublishResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"+\n" +
	"\fLeaveRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\"5\n" +
	"\rLeaveResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\xba\x01\n" +
	"\tBroadcast\x12,\n" +
	"\x04type\x18\x01 \x01(\x0e2\x18.chitchat.Broadcast.TypeR\x04type\x12\x1b\n" +
	"\tclient_id\x18\x02 \x01(\tR\bclientId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12!\n" +
	"\flogical_time\x18\x04 \x01(\x03R\vlogicalTime\"%\n" +
	"\x04Type\x12\b\n" +
	"\x04CHAT\x10\x00\x12\b\n" +
	"\x04JOIN\x10\x01\x12\t\n" +
	"\x05LEAVE\x10\x022\xd1\x01\n" +
	"\x0fChitChatService\x12@\n" +
	"\tSubscribe\x12\x1a.chitchat.SubscribeRequest\x1a\x13.chitchat.Broadcast\"\x000\x01\x12@\n" +
	"\aPublish\x12\x18.chitchat.PublishRequest\x1a\x19.chitchat.PublishResponse\"\x00\x12:\n" +
	"\x05Leave\x12\x16.chitchat.LeaveRequest\x1a\x17.chitchat.LeaveResponse\"\x00B\fZ\n" +
	"../ma3testb\x06proto3"

var (
	file_chitchat_proto_rawDescOnce sync.Once
	file_chitchat_proto_rawDescData []byte
)

func file_chitchat_proto_rawDescGZIP() []byte {
	file_chitchat_proto_rawDescOnce.Do(func() {
		file_chitchat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chitchat_proto_rawDesc), len(file_chitchat_proto_rawDesc)))
	})
	return file_chitchat_proto_rawDescData
}

var file_chitchat_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chitchat_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_chitchat_proto_goTypes = []any{
	(Broadcast_Type)(0),      // 0: chitchat.Broadcast.Type
	(*SubscribeRequest)(nil), // 1: chitchat.SubscribeRequest
	(*PublishRequest)(nil),   // 2: chitchat.PublishRequest
	(*PublishResponse)(nil),  // 3: chitchat.PublishResponse
	(*LeaveRequest)(nil),     // 4: chitchat.LeaveRequest
	(*LeaveResponse)(nil),    // 5: chitchat.LeaveResponse
	(*Broadcast)(nil),        // 6: chitchat.Broadcast
}
var file_chitchat_proto_depIdxs = []int32{
	0, // 0: chitchat.Broadcast.type:type_name -> chitchat.Broadcast.Type
	1, // 1: chitchat.ChitChatService.Subscribe:input_type -> chitchat.SubscribeRequest
	2, // 2: chitchat.ChitChatService.Publish:input_type -> chitchat.PublishRequest
	4, // 3: chitchat.ChitChatService.Leave:input_type -> chitchat.LeaveRequest
	6, // 4: chitchat.ChitChatService.Subscribe:output_type -> chitchat.Broadcast
	3, // 5: chitchat.ChitChatService.Publish:output_type -> chitchat.PublishResponse
	5, // 6: chitchat.ChitChatService.Leave:output_type -> chitchat.LeaveResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_chitchat_proto_init() }
func file_chitchat_proto_init() {
	if File_chitchat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chitchat_proto_rawDesc), len(file_chitchat_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chitchat_proto_goTypes,
		DependencyIndexes: file_chitchat_proto_depIdxs,
		EnumInfos:         file_chitchat_proto_enumTypes,
		MessageInfos:      file_chitchat_proto_msgTypes,
	}.Build()
	File_chitchat_proto = out.File
	file_chitchat_proto_goTypes = nil
	file_chitchat_proto_depIdxs = nil
}
